extends ../layout

block content
  style(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/css/bootstrap-multiselect.css")
  style(rel="stylesheet").
    .avatar {
      width:30px;
      filter: grayscale(100%) brightness(200%);
    }
    .dropdown-menu label.checkbox {
      padding:5px;
    }
    .dropdown-menu a {
      text-decoration:none;
      color:#555;
      cursor:pointer;
    }
    .dropdown-menu .checkbox input[type="checkbox"] {
      display:none;
    }
    .dropdown-menu .checkbox input[type="checkbox"]:checked + img {
      filter: grayscale(0%) brightness(100%);
    }
  .row.breadcrumbs
    .col-sm-12
      a(href='/')= brigade.name
      | &nbsp;&nbsp;/&nbsp;
      a(href='/projects') Projects
      | &nbsp;&nbsp;/&nbsp;
      a(href='/projects/'+project.id)=project.name
      | &nbsp;&nbsp;/&nbsp;
      a(href='/admin/projects/'+project.id+'/settings') Settings
  .page-header
    h1.page-title Project Settings
      span.float.right
        form(method='POST', action='/admin/projects/'+project.id+'/delete')
          input(type='hidden', name='_csrf', value=_csrf)
          button.btn.btn-danger(type='submit')
            i(class="fa fa-trash-o" aria-hidden="true")
            | Delete Project
    hr
    form.row.form-horizontal(action='/admin/projects/'+project.id, method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      .form-group.row
        label.col-sm-3.control-label(for='title') Project Title
        .col-sm-7
          input.form-control(type='text', name='title', id='title', value=project.name, placeholder='Awesome Project Name')
      .form-group.row
        label.col-sm-3.control-label(for='title') Project Id (based off title)
        .col-sm-7
          pre
            code=project.id
      .form-group.row
        label.col-sm-3.control-label(for='description') Project Tagline
        .col-sm-7
          input.form-control(type='text', name='description', id='description', value=project.description, placeholder='This project is the best thing ever.')
          em A short description of your project, used on the project list page
      .form-group.row
        label.col-sm-3.control-label(for='homepage') Homepage
        .col-sm-7
          input.form-control(type='text', name='homepage', id='homepage', value=project.homepage)
          em Should be a fully qualified URL; Optional
      .form-group.row
        label.col-sm-3.control-label(for='brigade') Home Brigade
        .col-sm-7
          select.form-control(id="brigade", name="brigade")
            option(value=brigade.slug, selected=true)=brigade.name
          em This is where your project is primarily being worked on
      .form-group.row
        label.col-sm-3.control-label(for='geography') Location
        .col-sm-7
          input.form-control(type='text', name='geography', id='geography', value=project.geography, placeholder='Awesome town, USA')
          em Does your project serve a particular community? List that here, otherwise leave blank.
      .form-group.row
        label.col-sm-3.control-label(for='politicalEntity') Community Partner
        .col-sm-7
          input.form-control(type='text', name='politicalEntity', id='politicalEntity', value=project.politicalEntity, placeholder='City of Awesome, LLC')
          em Have you partnered with a separate community entity (e.g. A government agency, or another non-profit)? List that here, otherwise, leave blank.
      .form-group.row
        label.col-sm-3.control-label(for='status') Lifecycle Status
        .col-sm-7
          select.form-control(id="status", name="status")
            for status in ['proposed', 'discovery', 'prototype', 'mvp', 'alpha', 'beta', 'live']
              option(value=status, selected=(status == project.status))=status
          em The lifecycle status of your project may vary; if it's a new project/idea, select "proposed"

      .form-group.row
        label.col-sm-3.control-label(for='active') Active Project?
        .col-sm-7
          input(type='checkbox', name='active', id='active', checked=project.active)
          em.row Active tags are dynamic based on a number of criteria: a) activity within Brigadehub (updating this profile), b) event checkins of project members, and optionally c) activity on Github
      .form-group.row
        label.col-sm-3.control-label(for='checkFromGithub') Use Repos to set active state?
        .col-sm-7
          input(type='checkbox', name='checkFromGithub', id='checkFromGithub', checked=project.checkFromGithub)
          em.row This will enable use of git commits and issue activity to trigger the active flag (requires one or more repos be set below.)
      .form-group.row
        label.col-sm-3.control-label(for='repository') GitHub Repos
        .col-sm-7
          .all-repositories.row
            .input-group.repository-group.row
              input.form-control(type='text', name='repositories', id='repositories0', data-index="0" value=project.repositories&&project.repositories.length?project.repositories[0]:project.repository, placeholder='https://github.com/'+brigade.slug+'/example')
              .input-group-btn
                button.btn(class=(1>=project.repositories.length-1)?'add-repo btn-primary':'remove-repo btn-danger')
                  i.fa(class=(1>=project.repositories.length-1)?'fa-plus':'fa-minus')
            each repository, index in project.repositories
              if index !== 0
                .input-group.repository-group.row
                  input.form-control(type='text', name='repositories', id='repositories'+index, data-index=index value=project.repositories&&project.repositories.length?project.repositories[index]:'', placeholder='https://github.com/'+brigade.slug+'/example')
                  .input-group-btn
                    button.btn(class=(index===project.repositories.length-1)?'add-repo btn-primary':'remove-repo btn-danger')
                      i.fa(class=(index===project.repositories.length-1)?'fa-plus':'fa-minus')
          em Should be fully qualified URLs; Optional
      .form-group.row
        label.col-sm-3.control-label(for='members') Project Leads
        .col-sm-7
          select.form-control.multi-select-menu.leads-select(name='leads', id='leads', multiple=true)
            for lead in users
              option(value=lead.username, data-img=lead.profile.picture, selected=(lead.teams.lead.indexOf(project.id)>-1))
                if(lead.profile.name)
                  =lead.profile.name+' ('+lead.username+')'
                else
                  ='('+lead.username+')'
      .form-group.row
        label.col-sm-3.control-label(for='members') Project Members
        .col-sm-7
          select.form-control.multi-select-menu.members-select(name='members', id='members', multiple=true)
            for member in users
              option(value=member.username, data-img=member.profile.picture, selected=(member.teams.project.indexOf(project.id)>-1))
                if(member.profile.name)
                  =member.profile.name+' ('+member.username+')'
                else
                  ='('+member.username+')'
      .form-group.row
        label.col-sm-3.control-label(for='needs') Project Needs
        .col-sm-7
          select.form-control.input-tags-target(name='needs', id='needs', multiple=true, data-role="tagsinput")
            for need in project.needs
              option(value=need, selected=true)=need
          em These should be 1-2 word describers, comma-dilineated, used for tagging and sorting.
      .form-group.row
        label.col-sm-3.control-label(for='keywords') Project Keywords
        .col-sm-7
          select.form-control.input-tags-target(name='keywords', id='keywords', multiple=true, data-role="tagsinput")
            for keyword in project.keywords
              option(value=keyword, selected=true)=keyword
          em These should be 1-2 word describers, comma-dilineated, used for tagging and sorting.
      .form-group.row
        .col-sm-7.col-sm-offset-3
          img(src=project.thumbnailUrl)
      .form-group.row
        label.col-sm-3.control-label(for='thumbnailUrl') Project Thumbnail Image URL
        .col-sm-7
          input.form-control(type='text', name='thumbnailUrl', id='thumbnailUrl', value=project.thumbnailUrl)
          em This should be a direct link to a square-ratio image, used in the project list page. Fully Qualified URL. Optional.
      .form-group.row
        .col-sm-7.col-sm-offset-3
          img(src=project.bannerUrl)
      .form-group.row
        label.col-sm-3.control-label(for='bannerUrl') Project Banner Image URL
        .col-sm-7
          input.form-control(type='text', name='bannerUrl', id='bannerUrl', value=project.bannerUrl)
          em This should be a direct link to a banner image, used in the project profile page. Fully Qualified URL. Optional.
      .form-group.row
        label.col-sm-3.control-label(for='content') Project Profile Content &nbsp;
          a(href='https://guides.github.com/features/mastering-markdown/#syntax', target='_blank')
            img(src='https://cdn.rawgit.com/dcurtis/markdown-mark/master/svg/markdown-mark.svg', width='25')
          br
          br
          em This is the main content of your project's profile page. You can go into detail about how your project is used, how to redeploy it, embed diagrams or photos, whatever you would like. Content is formatted using&nbsp;
            a(href='https://guides.github.com/features/mastering-markdown/#syntax', target='_blank') Markdown syntax
          | .
        .col-sm-7
          textarea.form-control.simple-mde(name='content', id='content', rows="6")
            =project.content
      .form-group.row
        .col-sm-offset-3.col-sm-4
          button.btn.btn.btn-primary(type='submit')
            i.fa.fa-pencil
            | Update Project
  a(href='/projects/'+project.id) Back
block script
  script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.min.js")
  script.
    $(document).ready(function() {
      $('.multi-select-menu').each(function(){
        new Choices(this);
      })

      // github repos
      var next = 1;
      $(document).on('click', '.add-repo', function(e){
          e.preventDefault();
          var $inputGroup = $(e.target).closest('.repository-group')
          console.log($inputGroup)
          var $allRepos = $inputGroup.closest('.all-repositories')
          console.log($allRepos)
          var lastId = $allRepos.last('.repository-group').find('input.form-control').attr('data-index')
          lastId = parseInt(lastId, 10)
          var newId = lastId + 1
          var $newInputGroup = $('<div>')
          $newInputGroup.attr('class', 'input-group repository-group row')
          var $newInput = $('<input>')
          $newInput.attr('class', 'form-control')
          $newInput.attr('type', 'text')
          $newInput.attr('name', 'repositories')
          $newInput.attr('id', 'repositories'+newId)
          $newInput.attr('data-index', newId)
          $newInput.attr('placeholder', placeholder='https://github.com/#{brigade.slug}/example')
          $newInputGroup.append($newInput)
          var $newInputGroupBtn = $('<div>')
          $newInputGroupBtn.attr('class', 'input-group-btn')
          var $newButton = $('<button>')
          $newButton.attr('class', 'add-repo btn btn-primary')
          var $newIcon = $('<i>')
          $newIcon.attr('class', 'fa fa-plus')
          $newButton.append($newIcon)
          $newInputGroupBtn.append($newButton)
          $newInputGroup.append($newInputGroupBtn)
          $allRepos.append($newInputGroup)
          var $oldButton = $inputGroup.find('button')
          $oldButton.removeClass('btn-primary')
          $oldButton.removeClass('add-repo')
          $oldButton.addClass('btn-danger')
          $oldButton.addClass('remove-repo')
          var $oldIcon = $oldButton.find('i')
          $oldIcon.removeClass('fa-plus')
          $oldIcon.addClass('fa-minus')
          $oldButton.off('click')
          $oldButton.on('click', function () {
            $inputGroup.remove()
          })
          //- .input-group.repository-group.row
          //-   input.form-control(type='text', name='repositories', id='repositories0', value=repositories&&repositories.length?repositories[0]:'', placeholder='https://github.com/'+brigade.slug+'/example')
          //-   .input-group-btn
          //-     button.add-repo.btn.btn-primary
          //-       i.fa.fa-plus
        });

        $(document).on('click', '.remove-repo', function(e){
            e.preventDefault();
            var $inputGroup = $(e.target).closest('.repository-group')
            $inputGroup.remove()
        })
    })
